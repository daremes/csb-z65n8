{"version":3,"sources":["App.js","index.js"],"names":["App","useState","tracks","setTracks","image","setImage","link","setLink","blob","setBlob","ready","setReady","loading","setLoading","fileName","title","meta","setMeta","getPage","a","fetch","res","text","html","parser","DOMParser","doc","parseFromString","picture","querySelector","img","getAttribute","playlist","Array","from","querySelectorAll","info","map","track","index","href","split","textContent","String","padStart","replaceAll","toLowerCase","console","log","className","src","alt","onSubmit","e","preventDefault","placeholder","type","onChange","target","value","disabled","onClick","length","srcSet","i","url","fetchMp3","response","URL","createObjectURL","loadBlob","download","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.18b7756c.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\n\n// const lukyhoPlejlist = document.querySelector('.sm2-playlist-wrapper'); const odkazy = lukyhoPlejlist.querySelectorAll('a'); odkazy.forEach((odkaz) => {console.log(odkaz.getAttribute('href'))})\n\nexport default function App() {\n  const [tracks, setTracks] = useState([]);\n  const [image, setImage] = useState(null);\n  const [link, setLink] = useState(\"\");\n  const [blob, setBlob] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [meta, setMeta] = useState({ fileName: \"track.mp3\", title: \"track\" });\n\n  const reset = () => {\n    setReady(false);\n    setBlob(null);\n  };\n  const loadBlob = (url, fileName, title) => {\n    const fetchMp3 = async () => {\n      const response = await fetch(url);\n      const blob = await response.blob();\n      const link = URL.createObjectURL(blob);\n      setMeta({ title, fileName });\n      setBlob(link);\n      setReady(true);\n      setLoading(false);\n    };\n    setLoading(true);\n    fetchMp3();\n  };\n\n  const getPage = async () => {\n    if (!link) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch(link);\n      const html = await res.text();\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const picture = doc.querySelector(\"picture > source\");\n      if (picture) {\n        const img = picture.getAttribute(\"data-srcset\");\n        setImage(img || \"\");\n      }\n      const playlist = doc.querySelector(\".sm2-playlist-wrapper\");\n      if (playlist) {\n        const tracks = Array.from(playlist.querySelectorAll(\"a\"));\n        const info = tracks.map((track, index) => {\n          const href = track.getAttribute(\"href\").split(\"?uuid=\")[0];\n          const title = track.querySelector(\"div > div\").textContent;\n          const fileName = `${String(index + 1).padStart(\n            2,\n            \"0\"\n          )}_${title.replaceAll(/[: .]+/g, \"-\").toLowerCase()}`;\n          return { href, fileName, title };\n        });\n        setTracks(info);\n      } else {\n        console.log(\"Nic!\");\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Stahovadlo</h1>\n      {loading && (\n        <div className=\"overlay\">\n          <div className=\"content\">\n            <div>\n              <img src=\"/skate.gif\" alt=\"loading...\" />\n            </div>\n            <div className=\"loading-text\">Malý moment. Láduju to tam.</div>\n          </div>\n        </div>\n      )}\n      <form\n        className=\"form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          getPage();\n        }}\n      >\n        <div>\n          <input\n            className=\"link\"\n            placeholder=\"Vlož odkaz z Rozhlasu\"\n            type=\"text\"\n            onChange={(e) => setLink(e.target.value)}\n          />\n        </div>\n        <button disabled={!link} type=\"submit\" onClick={getPage}>\n          Načíst\n        </button>\n      </form>\n      {!loading && tracks.length > 0 && (\n        <div>\n          <div className=\"preview\">\n            <img srcSet={image} alt=\"preview\" />\n          </div>\n          {tracks.map((track, i) => (\n            <div key={track.fileName}>\n              <div className=\"item\">\n                <span>\n                  <b>{`[${i + 1}] `}</b>\n                  {track.title}{\" \"}\n                </span>\n                <button\n                  disabled={loading}\n                  onClick={() => {\n                    loadBlob(track.href, track.fileName, track.title);\n                  }}\n                >\n                  {` > `}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n      {ready && (\n        <div className=\"overlay\">\n          <div className=\"content\">\n            <div className=\"close\">\n              <button onClick={reset}>Zavřít</button>\n            </div>\n            <div>\n              <div className=\"title\">{meta.title}</div>\n              <div>\n                <a\n                  href={blob}\n                  onClick={() => setReady(false)}\n                  download={`${meta.fileName}.mp3`}\n                >\n                  Stáhnout track\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}